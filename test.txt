
Teorijski deo
---

Dati sto konciznije odgvore u formi prosto prosirenih recenica na svako od sledecih pitanja.

01. Sta je to JSON?
JSON je skraceno od Java Script Open Notation, i predstavlja sintaksu za cuvanje i razmenu podataka.
02. Sta je to XML?
XML je skraceno od Extensible Markup Language, je jezik sa unapred odredjenim skupom tagova.
04. Sta je to HTTP?
HTTP je skraceno od hypertext transfer protocol, i predstavlja protokol za razmenu web stranica.
05. Sta je to RESTful API?
RESTful API definise set funkcija pomocu kojih developeri mogu da traze i primaju odgovore putem HTTP protokola kao sto su GET i POST
06. Koje HTTP metode imamo?
GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS,TRACE, PATCH
07. Sta je to DNS?
DNS je skracenica od Domain Name Service
08. Sta je to private IP?
Private IP adrese su podryane od strane mreznih uredjaja, kao npr ruteri
09. Sta je to AJAX?
AJAX je asinhroni javaskript i xml metod koji kombinuje nekoliko programskih alatki, ukljucujuci javascript, xml, css itd
10. Sta je to TCP/IP?
Skraceno od Transmission Control Protocol/Internet Protocol, koji se koristi da omoguci racunarima da dele resurse putem mreze.
11. Sta je to kes memorija?
Kes memorija se jos zove i CPU memorija i sluyi za skladistenje podataka koji se cesto koriste.

12. Koja je razlika izmedju klase i objekta?
Glavna razlika je da se klasa koristi kako bi se napravio objekat istog tipa.


Backend
---

1. U `models.py` fajlu implementirati `Comment` model (klasu) u Python-u koja sadrzi atribute:
- `text`: sam komentar, i
- `date`: datum komentara u formatu `YYYY-MM-DD`
"Override"-ovati `__repr__` metod.

2. U `models.py` fajlu definisati `COMMENTS` varijablu koja sadrzi niz od 3 elementa koji su tipa `Comment`. 

3. U `app.py` fajlu napraviti Flask applikaciju koja ima `index` "view" funkciju koja handle-uje `/` route. Funkcija bi trebalo da vraca HTML string koji u `body`-ju sadrzi heading "Welcome!".

4. U `app.py` dodati `comments` "view" funkciju koja handle-uje `/comments` route. Funkcija bi trebalo da vraca HTML koji u `body`-ju sadrzi tabelu komentara. Koristiti Flask template.

5.  U `app.py` dodati `api_comments` "view" funkciju koja handle-uje `/api/v1.0/comments` route. Funkcija bi trebalo da vraca JSON reprezentaciju `COMMENTS` niza.

Frontend
---

U `home.html` fajlu imlementirati jednostavnu klijent aplikaciju kojom moze da testira prethodno implementirani API end point. Koristiti `form` i `iframe`.

Algoritmi
---

Napisati i JavaScript i Python funkciju koja predstavlja resenje sledeceg zadataka:

Write a program that prints the numbers from 1 to 100. But for multiples of three print `Fizz` instead of the number and for the multiples of five print `Buzz`. For numbers which are multiples of both three and five print `FizzBuzz`.

Uputstvo
---

Resenja i odgovore predati u okviru GitHub repozitorijuma.